{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/comments.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\nimport PropTypes from \"prop-types\";\nimport commentService from \"../services/commentService\";\nimport auth from \"../services/auth\";\nimport \"../assets/css/comments.css\";\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isVoted: false\n    };\n\n    this.fetchingComments = async () => {\n      const {\n        data: comments\n      } = await commentService.getComments();\n      this.setState({\n        comments\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchingComments();\n    this.fetchCurrentUser();\n  }\n\n  async fetchCurrentUser() {\n    const user = await auth.getCurrentUser();\n    this.setState({\n      user\n    });\n  }\n\n  toggleIsVoted() {\n    this.setState({\n      isVoted: !this.state.isVoted\n    });\n  }\n\n  async handleUpVote(comment) {\n    const {\n      comments,\n      isVoted\n    } = this.state;\n    this.setState({\n      isVoted: true\n    });\n\n    try {\n      if (isVoted === true) {\n        comments.filter(c => c._id === comment._id ? c.upvotes++ : null);\n        this.setState({\n          comments,\n          isVoted: false\n        });\n        await commentService.upvote(comment);\n      }\n\n      if (isVoted === false) {\n        comment.filter(c => c._id === comment._id ? c.upvotes-- : null);\n        this.setState({\n          comments\n        });\n        await commentService.upvote(comment);\n      }\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  async handleDownVote(comment) {\n    const {\n      comments\n    } = this.state;\n\n    try {\n      comments.filter(c => c._id === comment._id ? c.downvotes += 1 : null);\n      this.setState({\n        comments\n      });\n      await commentService.downvote(comment);\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  async handleDelete(comment) {\n    const originalComments = this.state.comments;\n    const {\n      user\n    } = this.state;\n\n    try {\n      if (user && user._id === comment.user._id) {\n        this.setState({\n          comments: this.state.comments.filter(c => c._id !== comment._id)\n        });\n        await commentService.deleteComment(comment);\n      }\n    } catch (err) {\n      console.log(err.response.data);\n      this.setState({\n        comments: originalComments\n      });\n    }\n  }\n\n  render() {\n    const {\n      comments,\n      user\n    } = this.state;\n    const {\n      item\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"comments-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, comments.map(comment => /*#__PURE__*/React.createElement(\"div\", {\n      key: comment._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, item && item._id === comment.topic ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: comment.user.imageUrl,\n      alt: \"user avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, comment.user.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createdAt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, moment(Date.parse(comment.createdAt)).fromNow()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, comment.comment)), user && user._id === comment.user._id ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleDelete(comment),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Delete\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"votes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, comment.upvotes, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => this.handleUpVote(comment),\n      className: \"fa fa-arrow-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => this.handleDownVote(comment),\n      className: \"fa fa-arrow-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }), comment.downvotes), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"reply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/topic-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, \"Reply\"))))) : null)));\n  }\n\n}\n\nComments.propTypes = {\n  item: PropTypes.object\n};\nexport default Comments;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/comments.jsx"],"names":["React","Component","moment","ReactMarkdown","PropTypes","commentService","auth","Comments","state","comments","isVoted","fetchingComments","data","getComments","setState","componentDidMount","fetchCurrentUser","user","getCurrentUser","toggleIsVoted","handleUpVote","comment","filter","c","_id","upvotes","upvote","err","console","log","response","handleDownVote","downvotes","downvote","handleDelete","originalComments","deleteComment","render","item","props","map","topic","imageUrl","name","Date","parse","createdAt","fromNow","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAO,4BAAP;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BO,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KADuB;;AAAA,SAgB/BC,gBAhB+B,GAgBZ,YAAY;AAC7B,YAAM;AAAEC,QAAAA,IAAI,EAAEH;AAAR,UAAqB,MAAMJ,cAAc,CAACQ,WAAf,EAAjC;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAnB8B;AAAA;;AAM/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,gBAAL;AACA,SAAKK,gBAAL;AACD;;AAED,QAAMA,gBAAN,GAAyB;AACvB,UAAMC,IAAI,GAAG,MAAMX,IAAI,CAACY,cAAL,EAAnB;AACA,SAAKJ,QAAL,CAAc;AAAEG,MAAAA;AAAF,KAAd;AACD;;AAODE,EAAAA,aAAa,GAAG;AACd,SAAKL,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAAvB,KAAd;AACD;;AAED,QAAMU,YAAN,CAAmBC,OAAnB,EAA4B;AAC1B,UAAM;AAAEZ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAwB,KAAKF,KAAnC;AACA,SAAKM,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAd;;AACA,QAAI;AACF,UAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpBD,QAAAA,QAAQ,CAACa,MAAT,CAAiBC,CAAD,IAAQA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAlB,GAAwBD,CAAC,CAACE,OAAF,EAAxB,GAAsC,IAA9D;AACA,aAAKX,QAAL,CAAc;AAAEL,UAAAA,QAAF;AAAYC,UAAAA,OAAO,EAAE;AAArB,SAAd;AACA,cAAML,cAAc,CAACqB,MAAf,CAAsBL,OAAtB,CAAN;AACD;;AACD,UAAIX,OAAO,KAAK,KAAhB,EAAuB;AACrBW,QAAAA,OAAO,CAACC,MAAR,CAAgBC,CAAD,IAAQA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAlB,GAAwBD,CAAC,CAACE,OAAF,EAAxB,GAAsC,IAA7D;AACA,aAAKX,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACA,cAAMJ,cAAc,CAACqB,MAAf,CAAsBL,OAAtB,CAAN;AACD;AACF,KAXD,CAWE,OAAOM,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACD;AACF;;AAED,QAAMC,cAAN,CAAqBV,OAArB,EAA8B;AAC5B,UAAM;AAAEZ,MAAAA;AAAF,QAAe,KAAKD,KAA1B;;AACA,QAAI;AACFC,MAAAA,QAAQ,CAACa,MAAT,CAAiBC,CAAD,IACdA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAlB,GAAyBD,CAAC,CAACS,SAAF,IAAe,CAAxC,GAA6C,IAD/C;AAGA,WAAKlB,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACA,YAAMJ,cAAc,CAAC4B,QAAf,CAAwBZ,OAAxB,CAAN;AACD,KAND,CAME,OAAOM,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACD;AACF;;AAED,QAAMI,YAAN,CAAmBb,OAAnB,EAA4B;AAC1B,UAAMc,gBAAgB,GAAG,KAAK3B,KAAL,CAAWC,QAApC;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,KAAKT,KAAtB;;AACA,QAAI;AACF,UAAIS,IAAI,IAAIA,IAAI,CAACO,GAAL,KAAaH,OAAO,CAACJ,IAAR,CAAaO,GAAtC,EAA2C;AACzC,aAAKV,QAAL,CAAc;AACZL,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA4BC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAApD;AADE,SAAd;AAGA,cAAMnB,cAAc,CAAC+B,aAAf,CAA6Bf,OAA7B,CAAN;AACD;AACF,KAPD,CAOE,OAAOM,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAalB,IAAzB;AACA,WAAKE,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE0B;AAAZ,OAAd;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE5B,MAAAA,QAAF;AAAYQ,MAAAA;AAAZ,QAAqB,KAAKT,KAAhC;AACA,UAAM;AAAE8B,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,wBACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9B,QAAQ,CAAC+B,GAAT,CAAcnB,OAAD,iBACZ;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACG,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,IAAI,IAAIA,IAAI,CAACd,GAAL,KAAaH,OAAO,CAACoB,KAA7B,gBACC,uDACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEpB,OAAO,CAACJ,IAAR,CAAayB,QAAvB;AAAiC,MAAA,GAAG,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKrB,OAAO,CAACJ,IAAR,CAAa0B,IAAlB,CADF,CAJF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzC,MAAM,CAAC0C,IAAI,CAACC,KAAL,CAAWxB,OAAO,CAACyB,SAAnB,CAAD,CAAN,CAAsCC,OAAtC,EADH,CAPF,CADF,CADF,eAcE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgB1B,OAAO,CAACA,OAAxB,CADF,CAdF,EAiBGJ,IAAI,IAAIA,IAAI,CAACO,GAAL,KAAaH,OAAO,CAACJ,IAAR,CAAaO,GAAlC,gBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKU,YAAL,CAAkBb,OAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,GAMG,IAvBN,eAwBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,CAACI,OADX,eAEE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKL,YAAL,CAAkBC,OAAlB,CADjB;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKU,cAAL,CAAoBV,OAApB,CADjB;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKGA,OAAO,CAACW,SALX,CARF,eAeE;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAfF,CADF,CAxBF,CADD,GA+CG,IAhDN,CADD,CADH,CADF;AAwDD;;AApI8B;;AAuIjCzB,QAAQ,CAACyC,SAAT,GAAqB;AACnBV,EAAAA,IAAI,EAAElC,SAAS,CAAC6C;AADG,CAArB;AAIA,eAAe1C,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\nimport PropTypes from \"prop-types\";\n\nimport commentService from \"../services/commentService\";\nimport auth from \"../services/auth\";\n\nimport \"../assets/css/comments.css\";\n\nclass Comments extends Component {\n  state = {\n    comments: [],\n    isVoted: false,\n  };\n\n  componentDidMount() {\n    this.fetchingComments();\n    this.fetchCurrentUser();\n  }\n\n  async fetchCurrentUser() {\n    const user = await auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  fetchingComments = async () => {\n    const { data: comments } = await commentService.getComments();\n    this.setState({ comments });\n  };\n\n  toggleIsVoted() {\n    this.setState({ isVoted: !this.state.isVoted });\n  }\n\n  async handleUpVote(comment) {\n    const { comments, isVoted } = this.state;\n    this.setState({ isVoted: true });\n    try {\n      if (isVoted === true) {\n        comments.filter((c) => (c._id === comment._id ? c.upvotes++ : null));\n        this.setState({ comments, isVoted: false });\n        await commentService.upvote(comment);\n      }\n      if (isVoted === false) {\n        comment.filter((c) => (c._id === comment._id ? c.upvotes-- : null));\n        this.setState({ comments });\n        await commentService.upvote(comment);\n      }\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  async handleDownVote(comment) {\n    const { comments } = this.state;\n    try {\n      comments.filter((c) =>\n        c._id === comment._id ? (c.downvotes += 1) : null,\n      );\n      this.setState({ comments });\n      await commentService.downvote(comment);\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  async handleDelete(comment) {\n    const originalComments = this.state.comments;\n    const { user } = this.state;\n    try {\n      if (user && user._id === comment.user._id) {\n        this.setState({\n          comments: this.state.comments.filter((c) => c._id !== comment._id),\n        });\n        await commentService.deleteComment(comment);\n      }\n    } catch (err) {\n      console.log(err.response.data);\n      this.setState({ comments: originalComments });\n    }\n  }\n\n  render() {\n    const { comments, user } = this.state;\n    const { item } = this.props;\n    return (\n      <div id=\"comments-wrapper\">\n        {comments.map((comment) => (\n          <div key={comment._id}>\n            {item && item._id === comment.topic ? (\n              <>\n                <div className=\"comments\">\n                  <div className=\"comment-details\">\n                    <div className=\"user-avatar\">\n                      <img src={comment.user.imageUrl} alt=\"user avatar\" />\n                    </div>\n                    <div>\n                      <h4>{comment.user.name}</h4>\n                    </div>\n                    <div className=\"createdAt\">\n                      {moment(Date.parse(comment.createdAt)).fromNow()}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"comment\">\n                  <ReactMarkdown>{comment.comment}</ReactMarkdown>\n                </div>\n                {user && user._id === comment.user._id ? (\n                  <div className=\"delete-btn\">\n                    <button onClick={() => this.handleDelete(comment)}>\n                      Delete\n                    </button>\n                  </div>\n                ) : null}\n                <div className=\"votes\">\n                  <div className=\"vote\">\n                    <span>\n                      {comment.upvotes}\n                      <i\n                        onClick={() => this.handleUpVote(comment)}\n                        className=\"fa fa-arrow-up\"\n                      />\n                    </span>\n                    <span>\n                      <i\n                        onClick={() => this.handleDownVote(comment)}\n                        className=\"fa fa-arrow-down\"\n                      />\n                      {comment.downvotes}\n                    </span>\n                    <span id=\"reply\">\n                      <a href=\"/topic-form\">Reply</a>\n                    </span>\n                  </div>\n                </div>\n              </>\n            ) : null}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nComments.propTypes = {\n  item: PropTypes.object,\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}