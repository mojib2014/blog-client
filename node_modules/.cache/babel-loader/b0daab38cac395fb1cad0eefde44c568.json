{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/forms/registerForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Form from \"../common/form\";\nimport FileInput from \"../common/fileInput\";\nimport userService from \"../../services/userService\";\nimport auth from \"../../services/auth\";\n\nclass RegisterForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        name: \"\",\n        username: \"\",\n        password: \"\"\n      },\n      file: null,\n      uploadedFile: null,\n      filename: \"Chose File\",\n      errors: {}\n    };\n    this.schema = {\n      name: Joi.string().min(5).max(20).required().label(\"Name\"),\n      username: Joi.string().email().required().label(\"Username\"),\n      password: Joi.string().min(6).max(20).required().label(\"Password\")\n    };\n\n    this.changeHandler = e => {\n      e.preventDefault();\n      this.setState({\n        file: e.target.files[0],\n        filename: e.target.files[0].name,\n        loaded: 0\n      });\n    };\n\n    this.handlefileUpload = async e => {\n      e.preventDefault();\n\n      try {\n        const file = new FormData();\n        file.append(\"file\", this.state.file);\n        const {\n          data\n        } = await userService.uploadUserImage(file, {\n          headers: {\n            \"Conent-type\": \"multipart/form-data\"\n          }\n        });\n        this.setState({\n          uploadedFile: {\n            filename: data.filename,\n            filepath: data.filepath\n          }\n        });\n        toast.success(\"Successfuly uploaded\");\n      } catch (err) {\n        if (err.response && err.response.status === 500) {\n          toast.error(\"Something failed\");\n        } else {\n          toast.error(err.response.data.msg);\n        }\n      }\n    };\n\n    this.doSubmit = async () => {\n      let {\n        data: user,\n        uploadedFile\n      } = this.state;\n      user = {\n        name: user.name,\n        username: user.username,\n        password: user.password,\n        imageUrl: uploadedFile ? uploadedFile.filepath : \"\",\n        createdAt: Date.now()\n      };\n\n      try {\n        const response = await userService.registerUser(user);\n        auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n        window.location = \"/\";\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.erros\n          };\n          errors.username = ex.response.data;\n          toast.error(ex.response.data);\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      filename\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Sign up\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FileInput, {\n      onChange: this.changeHandler,\n      onClick: this.handlefileUpload,\n      filename: filename,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), this.renderInput(\"name\", \"Name\", \"name\"), this.renderInput(\"username\", \"Username\", \"username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderButton(\"Register\")));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/forms/registerForm.jsx"],"names":["React","Joi","toast","Form","FileInput","userService","auth","RegisterForm","state","data","name","username","password","file","uploadedFile","filename","errors","schema","string","min","max","required","label","email","changeHandler","e","preventDefault","setState","target","files","loaded","handlefileUpload","FormData","append","uploadUserImage","headers","filepath","success","err","response","status","error","msg","doSubmit","user","imageUrl","createdAt","Date","now","registerUser","loginWithJwt","window","location","ex","erros","render","renderInput","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\n\nimport Form from \"../common/form\";\nimport FileInput from \"../common/fileInput\";\nimport userService from \"../../services/userService\";\nimport auth from \"../../services/auth\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { name: \"\", username: \"\", password: \"\" },\n    file: null,\n    uploadedFile: null,\n    filename: \"Chose File\",\n    errors: {},\n  };\n\n  schema = {\n    name: Joi.string().min(5).max(20).required().label(\"Name\"),\n    username: Joi.string().email().required().label(\"Username\"),\n    password: Joi.string().min(6).max(20).required().label(\"Password\"),\n  };\n\n  changeHandler = (e) => {\n    e.preventDefault();\n    this.setState({\n      file: e.target.files[0],\n      filename: e.target.files[0].name,\n      loaded: 0,\n    });\n  };\n\n  handlefileUpload = async (e) => {\n    e.preventDefault();\n    try {\n      const file = new FormData();\n      file.append(\"file\", this.state.file);\n      const { data } = await userService.uploadUserImage(file, {\n        headers: {\n          \"Conent-type\": \"multipart/form-data\",\n        },\n      });\n      this.setState({\n        uploadedFile: {\n          filename: data.filename,\n          filepath: data.filepath,\n        },\n      });\n      toast.success(\"Successfuly uploaded\");\n    } catch (err) {\n      if (err.response && err.response.status === 500) {\n        toast.error(\"Something failed\");\n      } else {\n        toast.error(err.response.data.msg);\n      }\n    }\n  };\n\n  doSubmit = async () => {\n    let { data: user, uploadedFile } = this.state;\n\n    user = {\n      name: user.name,\n      username: user.username,\n      password: user.password,\n      imageUrl: uploadedFile ? uploadedFile.filepath : \"\",\n      createdAt: Date.now(),\n    };\n    try {\n      const response = await userService.registerUser(user);\n\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.erros };\n        errors.username = ex.response.data;\n        toast.error(ex.response.data);\n\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    const { filename } = this.state;\n    return (\n      <div className=\"signup\">\n        <h1>Sign up</h1>\n        <form>\n          <FileInput\n            onChange={this.changeHandler}\n            onClick={this.handlefileUpload}\n            filename={filename}\n          />\n          {this.renderInput(\"name\", \"Name\", \"name\")}\n          {this.renderInput(\"username\", \"Username\", \"username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}