{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/common/protectedRoute.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport auth from \"../../services/auth\";\n\nconst ProtectedRoute = ({\n  path,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  const [user, setUser] = useState({});\n\n  const fetchCurrUser = async () => {\n    const data = await auth.getCurrentUser();\n    setUser(data);\n  };\n\n  useEffect(() => {\n    fetchCurrUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!user) return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      });\n      return Component ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }\n      })) : render(props);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }));\n};\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string,\n  component: PropTypes.func,\n  render: PropTypes.func,\n  rest: PropTypes.object\n};\nexport default ProtectedRoute;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/common/protectedRoute.jsx"],"names":["React","useState","useEffect","Route","Redirect","PropTypes","auth","ProtectedRoute","path","component","Component","render","rest","user","setUser","fetchCurrUser","data","getCurrentUser","props","pathname","state","from","location","propTypes","string","func","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAS,EAAEC,SAAnB;AAA8BC,EAAAA,MAA9B;AAAsC,KAAGC;AAAzC,CAAD,KAAqD;AAC1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMc,aAAa,GAAG,YAAY;AAChC,UAAMC,IAAI,GAAG,MAAMV,IAAI,CAACW,cAAL,EAAnB;AACAH,IAAAA,OAAO,CAACE,IAAD,CAAP;AACD,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,oBAAC,KAAD,oBACMH,IADN;AAEE,IAAA,MAAM,EAAGM,KAAD,IAAW;AACjB,UAAI,CAACL,IAAL,EACE,oBACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFM,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQF,aAAOZ,SAAS,gBAAG,oBAAC,SAAD,oBAAeQ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,GAA8BP,MAAM,CAACO,KAAD,CAApD;AACD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CA3BD;;AA6BAX,cAAc,CAACgB,SAAf,GAA2B;AACzBf,EAAAA,IAAI,EAAEH,SAAS,CAACmB,MADS;AAEzBf,EAAAA,SAAS,EAAEJ,SAAS,CAACoB,IAFI;AAGzBd,EAAAA,MAAM,EAAEN,SAAS,CAACoB,IAHO;AAIzBb,EAAAA,IAAI,EAAEP,SAAS,CAACqB;AAJS,CAA3B;AAOA,eAAenB,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport auth from \"../../services/auth\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  const [user, setUser] = useState({});\n  const fetchCurrUser = async () => {\n    const data = await auth.getCurrentUser();\n    setUser(data);\n  };\n\n  useEffect(() => {\n    fetchCurrUser();\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!user)\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location },\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n  path: PropTypes.string,\n  component: PropTypes.func,\n  render: PropTypes.func,\n  rest: PropTypes.object,\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}