{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/topicDetails/topicDetails.jsx\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport Author from \"../author\";\nimport Footer from \"../footer\";\nimport Like from \"../like\";\nimport topicService from \"../../services/topicService\";\nimport CommentForm from \"../forms/commentForm\";\nimport Comments from \"../comments\";\nimport \"../../assets/css/topicDetails.css\";\nimport httpService from \"../../services/httpService\";\nimport auth from \"../../services/auth\";\n\nclass TopicDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topics: [],\n      selectedTopic: {}\n    };\n\n    this.handleLike = item => {\n      const {\n        topics\n      } = this.state;\n      const {\n        user\n      } = this.props;\n      topics.map(async function (topic) {\n        topic.liked = !topic.liked;\n\n        if (user && topic._id === item._id && topic.liked === true) {\n          topic.likedBy.push(user._id);\n          topic.likesCount++;\n        }\n\n        if (topic.liked === false && topic.likedBy.includes(user._id)) {\n          topic.likedBy.splice(topic.likedBy.indexOf(user._id), 1);\n          topic.likesCount--;\n        }\n\n        try {\n          await topicService.updateTopic(topic);\n        } catch (err) {\n          toast.info(err.response.data);\n        }\n      });\n      this.setState({\n        topics\n      });\n    };\n\n    this.getSelectedTopic = () => {\n      const id = this.props.match.params.id;\n      const topics = this.state.topics;\n      let item;\n\n      for (let topic of topics) {\n        if (topic._id === id) item = topic;\n      }\n\n      return item;\n    };\n  }\n\n  async componentDidMount() {\n    this.fetchingTopics();\n  }\n\n  async fetchingTopics() {\n    const {\n      user\n    } = this.props;\n\n    try {\n      httpService.setJwtToken(auth.getJwt());\n      const {\n        data: topics\n      } = await topicService.getTopics();\n      topics.map(async function (topic) {\n        if (user && !topic.likedBy.includes(user._id)) {\n          topic.liked = false;\n          return await topicService.updateTopic(topic);\n        }\n      });\n      this.setState({\n        topics\n      });\n    } catch (err) {\n      toast.info(err.response.data);\n    }\n  }\n\n  render() {\n    const item = this.getSelectedTopic();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row topic-detail-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Author, {\n      item: item,\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topic-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topic-img-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.imageUrl,\n      alt: `${item.title} avatar`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ReactMarkdown, {\n      className: \"markdown-description\",\n      source: item.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Like, {\n      item: item,\n      onStars: () => this.handleStars(item),\n      onLike: () => this.handleLike(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"read-more-paragraph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, \"Read more\", /*#__PURE__*/React.createElement(NavLink, {\n      to: `/author/${item.author._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \" posts \"), \"by this author\"))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"There are no topics to show\"), /*#__PURE__*/React.createElement(CommentForm, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Comments, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nTopicDetails.propTypes = {\n  user: PropTypes.object\n};\nexport default TopicDetails;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/topicDetails/topicDetails.jsx"],"names":["React","Component","NavLink","ReactMarkdown","toast","PropTypes","Author","Footer","Like","topicService","CommentForm","Comments","httpService","auth","TopicDetails","state","topics","selectedTopic","handleLike","item","user","props","map","topic","liked","_id","likedBy","push","likesCount","includes","splice","indexOf","updateTopic","err","info","response","data","setState","getSelectedTopic","id","match","params","componentDidMount","fetchingTopics","setJwtToken","getJwt","getTopics","render","title","imageUrl","description","handleStars","author","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nimport Author from \"../author\";\nimport Footer from \"../footer\";\nimport Like from \"../like\";\nimport topicService from \"../../services/topicService\";\nimport CommentForm from \"../forms/commentForm\";\nimport Comments from \"../comments\";\n\nimport \"../../assets/css/topicDetails.css\";\nimport httpService from \"../../services/httpService\";\nimport auth from \"../../services/auth\";\n\nclass TopicDetails extends Component {\n  state = {\n    topics: [],\n    selectedTopic: {},\n  };\n\n  async componentDidMount() {\n    this.fetchingTopics();\n  }\n\n  async fetchingTopics() {\n    const { user } = this.props;\n    try {\n      httpService.setJwtToken(auth.getJwt());\n      const { data: topics } = await topicService.getTopics();\n      topics.map(async function (topic) {\n        if (user && !topic.likedBy.includes(user._id)) {\n          topic.liked = false;\n          return await topicService.updateTopic(topic);\n        }\n      });\n      this.setState({ topics });\n    } catch (err) {\n      toast.info(err.response.data);\n    }\n  }\n\n  handleLike = (item) => {\n    const { topics } = this.state;\n    const { user } = this.props;\n\n    topics.map(async function (topic) {\n      topic.liked = !topic.liked;\n\n      if (user && topic._id === item._id && topic.liked === true) {\n        topic.likedBy.push(user._id);\n        topic.likesCount++;\n      }\n\n      if (topic.liked === false && topic.likedBy.includes(user._id)) {\n        topic.likedBy.splice(topic.likedBy.indexOf(user._id), 1);\n\n        topic.likesCount--;\n      }\n\n      try {\n        await topicService.updateTopic(topic);\n      } catch (err) {\n        toast.info(err.response.data);\n      }\n    });\n\n    this.setState({ topics });\n  };\n\n  getSelectedTopic = () => {\n    const id = this.props.match.params.id;\n    const topics = this.state.topics;\n    let item;\n    for (let topic of topics) {\n      if (topic._id === id) item = topic;\n    }\n    return item;\n  };\n  render() {\n    const item = this.getSelectedTopic();\n    return (\n      <>\n        {item ? (\n          <>\n            <div className=\"row topic-detail-row\">\n              <Author item={item} user={this.props.user} />\n              <div className=\"column middle\">\n                <div className=\"topic-description\">\n                  <h1>{item.title}</h1>\n                  <div className=\"topic-img-container\">\n                    <img src={item.imageUrl} alt={`${item.title} avatar`} />\n                  </div>\n                  <ReactMarkdown\n                    className=\"markdown-description\"\n                    source={item.description}\n                  />\n                </div>\n              </div>\n              <Like\n                item={item}\n                onStars={() => this.handleStars(item)}\n                onLike={() => this.handleLike(item)}\n              />\n            </div>\n            <div className=\"read-more-paragraph\">\n              <p>\n                Read more\n                <NavLink to={`/author/${item.author._id}`}> posts </NavLink>\n                by this author\n              </p>\n            </div>\n          </>\n        ) : (\n          <p>There are no topics to show</p>\n        )}\n        <CommentForm item={item} />\n        <Comments item={item} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nTopicDetails.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default TopicDetails;\n"]},"metadata":{},"sourceType":"module"}