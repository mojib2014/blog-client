{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/forms/commentForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport Form from \"../common/form\";\nimport commentService from \"../../services/commentService\";\nimport auth from \"../../services/auth\";\nimport \"../../assets/css/commentForm.css\";\n\nclass CommentForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        comment: \"\"\n      },\n      errors: {},\n      user: {}\n    };\n    this.schema = {\n      comment: Joi.string().min(10).required().label(\"Comment\")\n    };\n\n    this.doSubmit = async () => {\n      const {\n        user,\n        data\n      } = this.state;\n      const {\n        item: topic\n      } = this.props;\n\n      if (user) {\n        try {\n          const comment = {\n            comment: data.comment,\n            user: user._id,\n            createdAt: Date.now(),\n            topic: topic._id\n          };\n          await commentService.createComment(comment);\n          toast.info(\"Successefully posted.\");\n          window.location = `/${topic.title}/${topic._id}`;\n        } catch (ex) {\n          if (ex.response && ex.response.status === 400) {\n            const errors = { ...this.state.errors\n            };\n            errors.comment = ex.response.data;\n            this.setState({\n              errors\n            });\n          }\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const user = await auth.getCurrentUser();\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-form-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.renderTextArea(\"comment\", \"Comment\", \"Please format your comment with markdown.\", 5, \"comment\"), this.renderButton(\"Post\"));\n  }\n\n}\n\nCommentForm.propTypes = {\n  topic: PropTypes.object\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/forms/commentForm.jsx"],"names":["React","Joi","toast","PropTypes","Form","commentService","auth","CommentForm","state","data","comment","errors","user","schema","string","min","required","label","doSubmit","item","topic","props","_id","createdAt","Date","now","createComment","info","window","location","title","ex","response","status","setState","componentDidMount","getCurrentUser","render","renderTextArea","renderButton","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,OAAO,kCAAP;;AAEA,MAAMC,WAAN,SAA0BH,IAA1B,CAA+B;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADA;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE;AAHA,KADqB;AAAA,SAY7BC,MAZ6B,GAYpB;AACPH,MAAAA,OAAO,EAAET,GAAG,CAACa,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAqBC,QAArB,GAAgCC,KAAhC,CAAsC,SAAtC;AADF,KAZoB;;AAAA,SAgB7BC,QAhB6B,GAgBlB,YAAY;AACrB,YAAM;AAAEN,QAAAA,IAAF;AAAQH,QAAAA;AAAR,UAAiB,KAAKD,KAA5B;AACA,YAAM;AAAEW,QAAAA,IAAI,EAAEC;AAAR,UAAkB,KAAKC,KAA7B;;AACA,UAAIT,IAAJ,EAAU;AACR,YAAI;AACF,gBAAMF,OAAO,GAAG;AACdA,YAAAA,OAAO,EAAED,IAAI,CAACC,OADA;AAEdE,YAAAA,IAAI,EAAEA,IAAI,CAACU,GAFG;AAGdC,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHG;AAIdL,YAAAA,KAAK,EAAEA,KAAK,CAACE;AAJC,WAAhB;AAMA,gBAAMjB,cAAc,CAACqB,aAAf,CAA6BhB,OAA7B,CAAN;AACAR,UAAAA,KAAK,CAACyB,IAAN,CAAW,uBAAX;AACAC,UAAAA,MAAM,CAACC,QAAP,GAAmB,IAAGT,KAAK,CAACU,KAAM,IAAGV,KAAK,CAACE,GAAI,EAA/C;AACD,SAVD,CAUE,OAAOS,EAAP,EAAW;AACX,cAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+C;AAC7C,kBAAMtB,MAAM,GAAG,EAAE,GAAG,KAAKH,KAAL,CAAWG;AAAhB,aAAf;AACAA,YAAAA,MAAM,CAACD,OAAP,GAAiBqB,EAAE,CAACC,QAAH,CAAYvB,IAA7B;AAEA,iBAAKyB,QAAL,CAAc;AAAEvB,cAAAA;AAAF,aAAd;AACD;AACF;AACF;AACF,KAvC4B;AAAA;;AAO7B,QAAMwB,iBAAN,GAA0B;AACxB,UAAMvB,IAAI,GAAG,MAAMN,IAAI,CAAC8B,cAAL,EAAnB;AACA,SAAKF,QAAL,CAAc;AAAEtB,MAAAA;AAAF,KAAd;AACD;;AA8BDyB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,cAAL,CACC,SADD,EAEC,SAFD,EAGC,2CAHD,EAIC,CAJD,EAKC,SALD,CADH,EAQG,KAAKC,YAAL,CAAkB,MAAlB,CARH,CADF;AAYD;;AArD4B;;AAwD/BhC,WAAW,CAACiC,SAAZ,GAAwB;AACtBpB,EAAAA,KAAK,EAAEjB,SAAS,CAACsC;AADK,CAAxB;AAIA,eAAelC,WAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nimport Form from \"../common/form\";\nimport commentService from \"../../services/commentService\";\nimport auth from \"../../services/auth\";\n\nimport \"../../assets/css/commentForm.css\";\n\nclass CommentForm extends Form {\n  state = {\n    data: { comment: \"\" },\n    errors: {},\n    user: {},\n  };\n\n  async componentDidMount() {\n    const user = await auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  schema = {\n    comment: Joi.string().min(10).required().label(\"Comment\"),\n  };\n\n  doSubmit = async () => {\n    const { user, data } = this.state;\n    const { item: topic } = this.props;\n    if (user) {\n      try {\n        const comment = {\n          comment: data.comment,\n          user: user._id,\n          createdAt: Date.now(),\n          topic: topic._id,\n        };\n        await commentService.createComment(comment);\n        toast.info(\"Successefully posted.\");\n        window.location = `/${topic.title}/${topic._id}`;\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors };\n          errors.comment = ex.response.data;\n\n          this.setState({ errors });\n        }\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"comment-form-div\">\n        {this.renderTextArea(\n          \"comment\",\n          \"Comment\",\n          \"Please format your comment with markdown.\",\n          5,\n          \"comment\",\n        )}\n        {this.renderButton(\"Post\")}\n      </div>\n    );\n  }\n}\n\nCommentForm.propTypes = {\n  topic: PropTypes.object,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}