{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/navbar.jsx\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport topicService from \"../services/topicService\";\nimport UserContext from \"../context/userContext\";\nimport Notification from \"./notifications\";\nimport userService from \"../services/userService\";\nimport \"../assets/css/navbar.css\";\n\nclass Navbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scrolled: false,\n      clicked: false,\n      users: []\n    };\n\n    this.fetchTopics = async () => {\n      const {\n        data: topics\n      } = await topicService.getTopics();\n      this.setState({\n        topics\n      });\n    };\n\n    this.handleScroll = () => {\n      window.addEventListener(\"scroll\", () => {\n        if (window.scrollY > 100 && window.innerWidth > 700) this.setState({\n          scrolled: true\n        });else if (window.scrollY < 100) this.setState({\n          scrolled: false\n        });\n      });\n    };\n\n    this.handleSubscription = async () => {\n      this.setState({\n        clicked: !this.state.clicked\n      }); // await mailService.sendEmail(user);\n    };\n  }\n\n  componentDidMount() {\n    this.handleScroll();\n    this.fetchTopics();\n    this.fetchingUsers();\n    this.progressBar();\n  }\n\n  progressBar() {\n    window.addEventListener(\"scroll\", () => {\n      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scrolled = winScroll / height * 100;\n      document.getElementById(\"myBar\").style.width = scrolled + \"%\";\n    });\n  }\n\n  async fetchingUsers() {\n    const {\n      data: users\n    } = await userService.getUsers();\n    this.setState({\n      users\n    });\n  }\n\n  findFollowers() {\n    const {\n      user\n    } = this.props;\n    const {\n      users\n    } = this.state;\n    let followers = [];\n\n    if (user) {\n      for (let i = 0; i < users.length; i++) {\n        if (user.followers.includes(users[i]._id)) {\n          followers.push(users[i]);\n        }\n      }\n    }\n\n    return followers;\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", window);\n  }\n\n  render() {\n    const {\n      onChange,\n      searchQuery\n    } = this.props;\n    const followers = this.findFollowers();\n    return /*#__PURE__*/React.createElement(UserContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, user => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.scrolled ? \"topnav sticky\" : \"topnav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: \"navbar-brand\",\n      to: \"/topics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Mojib\"), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/subscribe\",\n      onClick: this.handleSubscription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Subscribe\"), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/write\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Write\"), !user && /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    }, \"Sign in\"), !user && /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/getstarted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, \"Get Started\"), user && /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, user.imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"25px\",\n        height: \"25px\",\n        borderRadius: \"50%\"\n      },\n      src: user.imageUrl,\n      alt: \"user avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-user-circle\",\n      style: {\n        fontSize: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    })), user && /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"search\",\n      type: \"text\",\n      value: searchQuery,\n      placeholder: \"Search..\",\n      onChange: e => onChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Notification, {\n      followers: followers,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      id: \"myBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nNavbar.propTypes = {\n  user: PropTypes.object,\n  onChange: PropTypes.func,\n  searchQuery: PropTypes.string\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/navbar.jsx"],"names":["React","NavLink","PropTypes","topicService","UserContext","Notification","userService","Navbar","Component","state","scrolled","clicked","users","fetchTopics","data","topics","getTopics","setState","handleScroll","window","addEventListener","scrollY","innerWidth","handleSubscription","componentDidMount","fetchingUsers","progressBar","winScroll","document","body","scrollTop","documentElement","height","scrollHeight","clientHeight","getElementById","style","width","getUsers","findFollowers","user","props","followers","i","length","includes","_id","push","componentWillUnmount","removeEventListener","render","onChange","searchQuery","imageUrl","borderRadius","fontSize","e","propTypes","object","func","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport topicService from \"../services/topicService\";\nimport UserContext from \"../context/userContext\";\nimport Notification from \"./notifications\";\nimport userService from \"../services/userService\";\n\nimport \"../assets/css/navbar.css\";\n\nclass Navbar extends React.Component {\n  state = {\n    scrolled: false,\n    clicked: false,\n    users: [],\n  };\n\n  componentDidMount() {\n    this.handleScroll();\n    this.fetchTopics();\n    this.fetchingUsers();\n    this.progressBar();\n  }\n\n  progressBar() {\n    window.addEventListener(\"scroll\", () => {\n      const winScroll =\n        document.body.scrollTop || document.documentElement.scrollTop;\n      const height =\n        document.documentElement.scrollHeight -\n        document.documentElement.clientHeight;\n      const scrolled = (winScroll / height) * 100;\n      document.getElementById(\"myBar\").style.width = scrolled + \"%\";\n    });\n  }\n\n  fetchTopics = async () => {\n    const { data: topics } = await topicService.getTopics();\n    this.setState({ topics });\n  };\n\n  async fetchingUsers() {\n    const { data: users } = await userService.getUsers();\n    this.setState({ users });\n  }\n\n  findFollowers() {\n    const { user } = this.props;\n    const { users } = this.state;\n\n    let followers = [];\n    if (user) {\n      for (let i = 0; i < users.length; i++) {\n        if (user.followers.includes(users[i]._id)) {\n          followers.push(users[i]);\n        }\n      }\n    }\n\n    return followers;\n  }\n\n  handleScroll = () => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100 && window.innerWidth > 700)\n        this.setState({ scrolled: true });\n      else if (window.scrollY < 100) this.setState({ scrolled: false });\n    });\n  };\n\n  handleSubscription = async () => {\n    this.setState({ clicked: !this.state.clicked });\n    // await mailService.sendEmail(user);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", window);\n  }\n\n  render() {\n    const { onChange, searchQuery } = this.props;\n    const followers = this.findFollowers();\n    return (\n      <UserContext.Consumer>\n        {(user) => (\n          <div className={this.state.scrolled ? \"topnav sticky\" : \"topnav\"}>\n            <NavLink className=\"navbar-brand\" to=\"/topics\">\n              Mojib\n            </NavLink>\n            <NavLink to=\"/subscribe\" onClick={this.handleSubscription}>\n              Subscribe\n            </NavLink>\n            <NavLink to=\"/write\">Write</NavLink>\n            {!user && <NavLink to=\"/login\">Sign in</NavLink>}\n            {!user && <NavLink to=\"/getstarted\">Get Started</NavLink>}\n            {user && (\n              <NavLink to=\"/profile\">\n                {user.imageUrl ? (\n                  <img\n                    style={{\n                      width: \"25px\",\n                      height: \"25px\",\n                      borderRadius: \"50%\",\n                    }}\n                    src={user.imageUrl}\n                    alt=\"user avatar\"\n                  />\n                ) : (\n                  <i\n                    className=\"fa fa-user-circle\"\n                    style={{ fontSize: \"20px\" }}\n                  />\n                )}\n              </NavLink>\n            )}\n            {user && <NavLink to=\"/logout\">Logout</NavLink>}\n            <div className=\"search-container\">\n              <input\n                name=\"search\"\n                type=\"text\"\n                value={searchQuery}\n                placeholder=\"Search..\"\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <Notification followers={followers} user={user} />\n            <div className=\"progress-container\">\n              <div className=\"progress-bar\" id=\"myBar\"></div>\n            </div>\n          </div>\n        )}\n      </UserContext.Consumer>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  user: PropTypes.object,\n  onChange: PropTypes.func,\n  searchQuery: PropTypes.string,\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}