{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/common/form.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport TextArea from \"./textArea\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(this.state.data, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) {\n        errors[item.path] = item.message;\n      }\n\n      return errors;\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value;\n      this.setState({\n        data,\n        errors\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n  }\n\n  validateProperty({\n    name,\n    value\n  }) {\n    const obj = {\n      [name]: value\n    };\n    const schema = {\n      [name]: this.schema[name]\n    };\n    const {\n      error\n    } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Input, {\n      name: name,\n      type: type,\n      label: label,\n      onChange: this.handleChange,\n      value: data[name],\n      error: errors[name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    });\n  }\n\n  renderTextArea(name, label, placeholder, rows, type = \"text\") {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(TextArea, {\n      name: name,\n      type: type,\n      label: label,\n      rows: rows,\n      placeholder: placeholder,\n      value: data[name],\n      error: errors[name],\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    });\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: this.validate() ? \"disabled\" : \"register-btn\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, label);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/common/form.jsx"],"names":["React","Component","Joi","Input","TextArea","Form","state","data","errors","validate","options","abortEarly","error","schema","item","details","path","message","handleChange","currentTarget","input","errorMessage","validateProperty","name","value","setState","handleSubmit","e","preventDefault","doSubmit","obj","renderInput","label","type","renderTextArea","placeholder","rows","renderButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmB;;AAAA,SAM3BC,QAN2B,GAMhB,MAAM;AACf,YAAMC,OAAO,GAAG;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAhB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAYV,GAAG,CAACO,QAAJ,CAAa,KAAKH,KAAL,CAAWC,IAAxB,EAA8B,KAAKM,MAAnC,EAA2CH,OAA3C,CAAlB;AACA,UAAI,CAACE,KAAL,EAAY,OAAO,IAAP;AAEZ,YAAMJ,MAAM,GAAG,EAAf;;AACA,WAAK,IAAIM,IAAT,IAAiBF,KAAK,CAACG,OAAvB,EAAgC;AAC9BP,QAAAA,MAAM,CAACM,IAAI,CAACE,IAAN,CAAN,GAAoBF,IAAI,CAACG,OAAzB;AACD;;AAED,aAAOT,MAAP;AACD,KAjB0B;;AAAA,SA0B3BU,YA1B2B,GA0BZ,CAAC;AAAEC,MAAAA,aAAa,EAAEC;AAAjB,KAAD,KAA8B;AAC3C,YAAMZ,MAAM,GAAG,EAAE,GAAG,KAAKF,KAAL,CAAWE;AAAhB,OAAf;AACA,YAAMa,YAAY,GAAG,KAAKC,gBAAL,CAAsBF,KAAtB,CAArB;AACA,UAAIC,YAAJ,EAAkBb,MAAM,CAACY,KAAK,CAACG,IAAP,CAAN,GAAqBF,YAArB,CAAlB,KACK,OAAOb,MAAM,CAACY,KAAK,CAACG,IAAP,CAAb;AACL,YAAMhB,IAAI,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAb;AACAA,MAAAA,IAAI,CAACa,KAAK,CAACG,IAAP,CAAJ,GAAmBH,KAAK,CAACI,KAAzB;AACA,WAAKC,QAAL,CAAc;AAAElB,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAd;AACD,KAlC0B;;AAAA,SAoC3BkB,YApC2B,GAoCXC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMpB,MAAM,GAAG,KAAKC,QAAL,EAAf;AAEA,WAAKgB,QAAL,CAAc;AAAEjB,QAAAA,MAAM,EAAEA,MAAM,IAAI;AAApB,OAAd;AACA,UAAIA,MAAJ,EAAY;AAEZ,WAAKqB,QAAL;AACD,KA5C0B;AAAA;;AAmB3BP,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkB;AAChC,UAAMM,GAAG,GAAG;AAAE,OAACP,IAAD,GAAQC;AAAV,KAAZ;AACA,UAAMX,MAAM,GAAG;AAAE,OAACU,IAAD,GAAQ,KAAKV,MAAL,CAAYU,IAAZ;AAAV,KAAf;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAYV,GAAG,CAACO,QAAJ,CAAaqB,GAAb,EAAkBjB,MAAlB,CAAlB;AACA,WAAOD,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBE,OAApB,GAA8B,IAA1C;AACD;;AAsBDc,EAAAA,WAAW,CAACR,IAAD,EAAOS,KAAP,EAAcC,IAAI,GAAG,MAArB,EAA6B;AACtC,UAAM;AAAE1B,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AACA,wBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEiB,IADR;AAEE,MAAA,IAAI,EAAEU,IAFR;AAGE,MAAA,KAAK,EAAED,KAHT;AAIE,MAAA,QAAQ,EAAE,KAAKd,YAJjB;AAKE,MAAA,KAAK,EAAEX,IAAI,CAACgB,IAAD,CALb;AAME,MAAA,KAAK,EAAEf,MAAM,CAACe,IAAD,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAEDW,EAAAA,cAAc,CAACX,IAAD,EAAOS,KAAP,EAAcG,WAAd,EAA2BC,IAA3B,EAAiCH,IAAI,GAAG,MAAxC,EAAgD;AAC5D,UAAM;AAAE1B,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AAEA,wBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAEiB,IADR;AAEE,MAAA,IAAI,EAAEU,IAFR;AAGE,MAAA,KAAK,EAAED,KAHT;AAIE,MAAA,IAAI,EAAEI,IAJR;AAKE,MAAA,WAAW,EAAED,WALf;AAME,MAAA,KAAK,EAAE5B,IAAI,CAACgB,IAAD,CANb;AAOE,MAAA,KAAK,EAAEf,MAAM,CAACe,IAAD,CAPf;AAQE,MAAA,QAAQ,EAAE,KAAKL,YARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD;;AAEDmB,EAAAA,YAAY,CAACL,KAAD,EAAQ;AAClB,wBACE;AACE,MAAA,SAAS,EAAE,KAAKvB,QAAL,KAAkB,UAAlB,GAA+B,cAD5C;AAEE,MAAA,OAAO,EAAE,KAAKiB,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGM,KAJH,CADF;AAQD;;AAtF0B;;AAyF7B,eAAe3B,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Input from \"./input\";\nimport TextArea from \"./textArea\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) {\n      errors[item.path] = item.message;\n    }\n\n    return errors;\n  };\n\n  validateProperty({ name, value }) {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  }\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        name={name}\n        type={type}\n        label={label}\n        onChange={this.handleChange}\n        value={data[name]}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderTextArea(name, label, placeholder, rows, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <TextArea\n        name={name}\n        type={type}\n        label={label}\n        rows={rows}\n        placeholder={placeholder}\n        value={data[name]}\n        error={errors[name]}\n        onChange={this.handleChange}\n      />\n    );\n  }\n\n  renderButton(label) {\n    return (\n      <button\n        className={this.validate() ? \"disabled\" : \"register-btn\"}\n        onClick={this.handleSubmit}\n      >\n        {label}\n      </button>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}