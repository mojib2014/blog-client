{"ast":null,"code":"var _jsxFileName = \"/Users/mojib2014/Desktop/projects/blog-client/src/components/forms/profileEditForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport Form from \"../common/form\";\nimport Footer from \"../footer\";\nimport FileInput from \"../common/fileInput\";\nimport userService from \"../../services/userService\";\nimport \"../../assets/css/profileEdit.css\";\n\nclass ProfileEditForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        name: \"\",\n        username: \"\"\n      },\n      file: null,\n      uploadedFile: null,\n      filename: \"Chose File\",\n      errors: {}\n    };\n    this.schema = {\n      name: Joi.string().min(5).required().label(\"Name\"),\n      username: Joi.string().email().required().label(\"Username\")\n    };\n\n    this.changeHandler = e => {\n      e.preventDefault();\n      this.setState({\n        file: e.target.files[0],\n        filename: e.target.files[0].name,\n        loaded: 0\n      });\n    };\n\n    this.handlefileUpload = async e => {\n      e.preventDefault();\n\n      try {\n        const file = new FormData();\n        file.append(\"file\", this.state.file);\n        const {\n          data\n        } = await userService.uploadUserImage(file, {\n          headers: {\n            \"Conent-type\": \"multipart/form-data\"\n          }\n        });\n        this.setState({\n          uploadedFile: {\n            filename: data.filename,\n            filepath: data.filepath\n          }\n        });\n        toast.success(\"Successfuly uploaded\");\n      } catch (err) {\n        if (err.response && err.response.status === 500) {\n          toast.error(\"Something failed\");\n        } else {\n          toast.error(err.response.data.msg);\n        }\n      }\n    };\n\n    this.doSubmit = async () => {\n      const {\n        data,\n        uploadedFile\n      } = this.state;\n      const {\n        user\n      } = this.props;\n\n      if (user) {\n        const updated = {\n          name: data.name,\n          email: data.username,\n          imageUrl: uploadedFile ? uploadedFile.filepath : \"\",\n          _id: user._id,\n          updatedAt: Date.now()\n        };\n\n        try {\n          await userService.updateUser(updated);\n          window.location = \"/topics\";\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await this.populateUser();\n  }\n\n  async populateUser() {\n    const userId = this.props.match.params.id;\n    if (userId === \"new\") return;\n    const {\n      data: user\n    } = await userService.getUser(userId);\n    if (!user) return this.props.history.replace(\"/not-found\");\n    this.setState({\n      data: this.mapToViewModel(user)\n    });\n  }\n\n  mapToViewModel(user) {\n    return {\n      name: user.name,\n      username: user.email\n    };\n  }\n\n  render() {\n    const {\n      filename\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-edit-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Profile Edit Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FileInput, {\n      onChange: this.changeHandler,\n      onClick: this.handlefileUpload,\n      filename: filename,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), this.renderInput(\"name\", \"Name\", \"name\"), this.renderInput(\"username\", \"Username\", \"username\"), this.renderButton(\"Save\"))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nProfileEditForm.propTypes = {\n  user: PropTypes.object\n};\nexport default ProfileEditForm;","map":{"version":3,"sources":["/Users/mojib2014/Desktop/projects/blog-client/src/components/forms/profileEditForm.jsx"],"names":["React","Joi","toast","PropTypes","Form","Footer","FileInput","userService","ProfileEditForm","state","data","name","username","file","uploadedFile","filename","errors","schema","string","min","required","label","email","changeHandler","e","preventDefault","setState","target","files","loaded","handlefileUpload","FormData","append","uploadUserImage","headers","filepath","success","err","response","status","error","msg","doSubmit","user","props","updated","imageUrl","_id","updatedAt","Date","now","updateUser","window","location","console","log","componentDidMount","populateUser","userId","match","params","id","getUser","history","replace","mapToViewModel","render","renderInput","renderButton","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nimport Form from \"../common/form\";\nimport Footer from \"../footer\";\nimport FileInput from \"../common/fileInput\";\nimport userService from \"../../services/userService\";\n\nimport \"../../assets/css/profileEdit.css\";\n\nclass ProfileEditForm extends Form {\n  state = {\n    data: { name: \"\", username: \"\" },\n    file: null,\n    uploadedFile: null,\n    filename: \"Chose File\",\n    errors: {},\n  };\n\n  schema = {\n    name: Joi.string().min(5).required().label(\"Name\"),\n    username: Joi.string().email().required().label(\"Username\"),\n  };\n\n  async componentDidMount() {\n    await this.populateUser();\n  }\n\n  async populateUser() {\n    const userId = this.props.match.params.id;\n    if (userId === \"new\") return;\n\n    const { data: user } = await userService.getUser(userId);\n\n    if (!user) return this.props.history.replace(\"/not-found\");\n\n    this.setState({ data: this.mapToViewModel(user) });\n  }\n\n  mapToViewModel(user) {\n    return {\n      name: user.name,\n      username: user.email,\n    };\n  }\n\n  changeHandler = (e) => {\n    e.preventDefault();\n    this.setState({\n      file: e.target.files[0],\n      filename: e.target.files[0].name,\n      loaded: 0,\n    });\n  };\n\n  handlefileUpload = async (e) => {\n    e.preventDefault();\n    try {\n      const file = new FormData();\n      file.append(\"file\", this.state.file);\n      const { data } = await userService.uploadUserImage(file, {\n        headers: {\n          \"Conent-type\": \"multipart/form-data\",\n        },\n      });\n      this.setState({\n        uploadedFile: {\n          filename: data.filename,\n          filepath: data.filepath,\n        },\n      });\n      toast.success(\"Successfuly uploaded\");\n    } catch (err) {\n      if (err.response && err.response.status === 500) {\n        toast.error(\"Something failed\");\n      } else {\n        toast.error(err.response.data.msg);\n      }\n    }\n  };\n\n  doSubmit = async () => {\n    const { data, uploadedFile } = this.state;\n    const { user } = this.props;\n    if (user) {\n      const updated = {\n        name: data.name,\n        email: data.username,\n        imageUrl: uploadedFile ? uploadedFile.filepath : \"\",\n        _id: user._id,\n        updatedAt: Date.now(),\n      };\n      try {\n        await userService.updateUser(updated);\n        window.location = \"/topics\";\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  render() {\n    const { filename } = this.state;\n    return (\n      <>\n        <div className=\"profile-edit-form\">\n          <h1>Profile Edit Form</h1>\n          <form>\n            <FileInput\n              onChange={this.changeHandler}\n              onClick={this.handlefileUpload}\n              filename={filename}\n            />\n            {this.renderInput(\"name\", \"Name\", \"name\")}\n            {this.renderInput(\"username\", \"Username\", \"username\")}\n            {this.renderButton(\"Save\")}\n          </form>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nProfileEditForm.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default ProfileEditForm;\n"]},"metadata":{},"sourceType":"module"}